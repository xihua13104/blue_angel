; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bt_driver.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bt_driver.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\bt_driver.crf ..\..\Middleware\blue_angel\driver\bt_driver.c]
                          THUMB

                          AREA ||i.bt_driver_deinit||, CODE, READONLY, ALIGN=2

                  bt_driver_deinit PROC
;;;54     
;;;55     void bt_driver_deinit()
000000  b510              PUSH     {r4,lr}
;;;56     {
;;;57     	bt_driver_hardware_reset_controller();
000002  f7fffffe          BL       bt_driver_hardware_reset_controller
;;;58     	bt_driver_is_inited = false;
000006  2000              MOVS     r0,#0
000008  4902              LDR      r1,|L1.20|
00000a  7008              STRB     r0,[r1,#0]
;;;59     	BT_DRIVER_LOG_INFO("[BT_DRIVER] bt_driver deinit\r\n");
00000c  a002              ADR      r0,|L1.24|
00000e  f7fffffe          BL       __2printf
;;;60     }
000012  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  |L1.20|
                          DCD      bt_driver_is_inited
                  |L1.24|
000018  5b42545f          DCB      "[BT_DRIVER] bt_driver deinit\r\n",0
00001c  44524956
000020  45525d20
000024  62745f64
000028  72697665
00002c  72206465
000030  696e6974
000034  0d0a00  
000037  00                DCB      0

                          AREA ||i.bt_driver_hardware_reset_controller||, CODE, READONLY, ALIGN=2

                  bt_driver_hardware_reset_controller PROC
;;;31     
;;;32     void bt_driver_hardware_reset_controller()
000000  b508              PUSH     {r3,lr}
;;;33     {
;;;34         GPIO_InitTypeDef  GPIO_InitStructure;
;;;35         RCC_APB2PeriphClockCmd(BT_CONTROLLER_HARDWARE_RESET_PIN_PERIPH, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;36         GPIO_InitStructure.GPIO_Pin = BT_CONTROLLER_HARDWARE_RESET_PIN;
00000a  2080              MOVS     r0,#0x80
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;37         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;38         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000016  2001              MOVS     r0,#1
000018  f88d0002          STRB     r0,[sp,#2]
;;;39         GPIO_Init(BT_CONTROLLER_HARDWARE_RESET_PIN_GROUP, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4808              LDR      r0,|L2.64|
000020  f7fffffe          BL       GPIO_Init
;;;40     	
;;;41         GPIO_WriteBit(BT_CONTROLLER_HARDWARE_RESET_PIN_GROUP, BT_CONTROLLER_HARDWARE_RESET_PIN, Bit_RESET);
000024  2200              MOVS     r2,#0
000026  2180              MOVS     r1,#0x80
000028  4805              LDR      r0,|L2.64|
00002a  f7fffffe          BL       GPIO_WriteBit
;;;42         vTaskDelay(200);
00002e  20c8              MOVS     r0,#0xc8
000030  f7fffffe          BL       vTaskDelay
;;;43         GPIO_WriteBit(BT_CONTROLLER_HARDWARE_RESET_PIN_GROUP, BT_CONTROLLER_HARDWARE_RESET_PIN, Bit_SET);
000034  2201              MOVS     r2,#1
000036  2180              MOVS     r1,#0x80
000038  4801              LDR      r0,|L2.64|
00003a  f7fffffe          BL       GPIO_WriteBit
;;;44     }
00003e  bd08              POP      {r3,pc}
;;;45     
                          ENDP

                  |L2.64|
                          DCD      0x40010800

                          AREA ||i.bt_driver_init||, CODE, READONLY, ALIGN=2

                  bt_driver_init PROC
;;;45     
;;;46     void bt_driver_init()
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	if (!bt_driver_is_inited) {
000002  4806              LDR      r0,|L3.28|
000004  7800              LDRB     r0,[r0,#0]  ; bt_driver_is_inited
000006  b938              CBNZ     r0,|L3.24|
;;;49     		bt_driver_hardware_reset_controller();
000008  f7fffffe          BL       bt_driver_hardware_reset_controller
;;;50     		bt_driver_is_inited = true;
00000c  2001              MOVS     r0,#1
00000e  4903              LDR      r1,|L3.28|
000010  7008              STRB     r0,[r1,#0]
;;;51     		BT_DRIVER_LOG_INFO("[BT_DRIVER] bt_driver init\r\n");
000012  a003              ADR      r0,|L3.32|
000014  f7fffffe          BL       __2printf
                  |L3.24|
;;;52     	}
;;;53     }
000018  bd10              POP      {r4,pc}
;;;54     
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      bt_driver_is_inited
                  |L3.32|
000020  5b42545f          DCB      "[BT_DRIVER] bt_driver init\r\n",0
000024  44524956
000028  45525d20
00002c  62745f64
000030  72697665
000034  7220696e
000038  69740d0a
00003c  00      
00003d  00                DCB      0
00003e  00                DCB      0
00003f  00                DCB      0

                          AREA ||i.bt_driver_recieve_data_from_controller||, CODE, READONLY, ALIGN=2

                  bt_driver_recieve_data_from_controller PROC
;;;61     
;;;62     void bt_driver_recieve_data_from_controller(uint8_t data)
000000  b570              PUSH     {r4-r6,lr}
;;;63     {
000002  4604              MOV      r4,r0
;;;64     	bt_hci_packet_t *packet = NULL;
000004  2500              MOVS     r5,#0
;;;65     	if (buffer_index < sizeof(buffer)) {
000006  4837              LDR      r0,|L4.228|
000008  8800              LDRH     r0,[r0,#0]  ; buffer_index
00000a  2809              CMP      r0,#9
00000c  d207              BCS      |L4.30|
;;;66     		buffer[buffer_index++] = data;	
00000e  4835              LDR      r0,|L4.228|
000010  8801              LDRH     r1,[r0,#0]  ; buffer_index
000012  8800              LDRH     r0,[r0,#0]  ; buffer_index
000014  1c40              ADDS     r0,r0,#1
000016  4a33              LDR      r2,|L4.228|
000018  8010              STRH     r0,[r2,#0]
00001a  4833              LDR      r0,|L4.232|
00001c  5444              STRB     r4,[r0,r1]
                  |L4.30|
;;;67     	}
;;;68     
;;;69     	switch (rx_state) {
00001e  4833              LDR      r0,|L4.236|
000020  7800              LDRB     r0,[r0,#0]  ; rx_state
000022  b130              CBZ      r0,|L4.50|
000024  2801              CMP      r0,#1
000026  d008              BEQ      |L4.58|
000028  2802              CMP      r0,#2
00002a  d020              BEQ      |L4.110|
00002c  2803              CMP      r0,#3
00002e  d156              BNE      |L4.222|
000030  e042              B        |L4.184|
                  |L4.50|
;;;70     		case BT_DRIVER_WAIT_4_INDICATOR: {
;;;71     			rx_state = BT_DRIVER_WAIT_4_HEADER;
000032  2001              MOVS     r0,#1
000034  492d              LDR      r1,|L4.236|
000036  7008              STRB     r0,[r1,#0]
;;;72     			break;
000038  e052              B        |L4.224|
                  |L4.58|
;;;73     		}
;;;74     		case BT_DRIVER_WAIT_4_HEADER: {
;;;75     			if (rx_struct->ind == BT_UART_ACL && buffer_index >= BT_HCI_ACL_HEADER_SIZE) {
00003a  482d              LDR      r0,|L4.240|
00003c  6800              LDR      r0,[r0,#0]  ; rx_struct
00003e  7800              LDRB     r0,[r0,#0]
000040  2802              CMP      r0,#2
000042  d107              BNE      |L4.84|
000044  4827              LDR      r0,|L4.228|
000046  8800              LDRH     r0,[r0,#0]  ; buffer_index
000048  2805              CMP      r0,#5
00004a  d303              BCC      |L4.84|
;;;76     				rx_state = BT_DRIVER_WAIT_4_PAYLOAD;
00004c  2002              MOVS     r0,#2
00004e  4927              LDR      r1,|L4.236|
000050  7008              STRB     r0,[r1,#0]
000052  e00b              B        |L4.108|
                  |L4.84|
;;;77     			} else if (rx_struct->ind == BT_UART_EVT && buffer_index >= BT_HCI_EVT_HEADER_SIZE) {
000054  4826              LDR      r0,|L4.240|
000056  6800              LDR      r0,[r0,#0]  ; rx_struct
000058  7800              LDRB     r0,[r0,#0]
00005a  2804              CMP      r0,#4
00005c  d106              BNE      |L4.108|
00005e  4821              LDR      r0,|L4.228|
000060  8800              LDRH     r0,[r0,#0]  ; buffer_index
000062  2803              CMP      r0,#3
000064  d302              BCC      |L4.108|
;;;78     				rx_state = BT_DRIVER_WAIT_4_PAYLOAD;
000066  2002              MOVS     r0,#2
000068  4920              LDR      r1,|L4.236|
00006a  7008              STRB     r0,[r1,#0]
                  |L4.108|
;;;79     			}
;;;80     			break;
00006c  e038              B        |L4.224|
                  |L4.110|
;;;81     		}
;;;82     		case BT_DRIVER_WAIT_4_PAYLOAD: {
;;;83     			payload_index++;
00006e  4821              LDR      r0,|L4.244|
000070  8800              LDRH     r0,[r0,#0]  ; payload_index
000072  1c40              ADDS     r0,r0,#1
000074  491f              LDR      r1,|L4.244|
000076  8008              STRH     r0,[r1,#0]
;;;84     			if (rx_struct->ind == BT_UART_ACL && payload_index >= rx_struct->hci_header.hci_acl.length) {
000078  481d              LDR      r0,|L4.240|
00007a  6800              LDR      r0,[r0,#0]  ; rx_struct
00007c  7800              LDRB     r0,[r0,#0]
00007e  2802              CMP      r0,#2
000080  d10a              BNE      |L4.152|
000082  481b              LDR      r0,|L4.240|
000084  6800              LDR      r0,[r0,#0]  ; rx_struct
000086  f8b00003          LDRH     r0,[r0,#3]
00008a  8809              LDRH     r1,[r1,#0]  ; payload_index
00008c  4288              CMP      r0,r1
00008e  dc03              BGT      |L4.152|
;;;85     				rx_state = BT_DRIVER_RX_COMPLETE;
000090  2003              MOVS     r0,#3
000092  4916              LDR      r1,|L4.236|
000094  7008              STRB     r0,[r1,#0]
000096  e00e              B        |L4.182|
                  |L4.152|
;;;86     			} else if (rx_struct->ind == BT_UART_EVT && payload_index >= rx_struct->hci_header.hci_evt.length) {
000098  4815              LDR      r0,|L4.240|
00009a  6800              LDR      r0,[r0,#0]  ; rx_struct
00009c  7800              LDRB     r0,[r0,#0]
00009e  2804              CMP      r0,#4
0000a0  d109              BNE      |L4.182|
0000a2  4813              LDR      r0,|L4.240|
0000a4  6800              LDR      r0,[r0,#0]  ; rx_struct
0000a6  7880              LDRB     r0,[r0,#2]
0000a8  4912              LDR      r1,|L4.244|
0000aa  8809              LDRH     r1,[r1,#0]  ; payload_index
0000ac  4288              CMP      r0,r1
0000ae  dc02              BGT      |L4.182|
;;;87     				rx_state = BT_DRIVER_RX_COMPLETE;
0000b0  2003              MOVS     r0,#3
0000b2  490e              LDR      r1,|L4.236|
0000b4  7008              STRB     r0,[r1,#0]
                  |L4.182|
;;;88     			}
;;;89     			break;
0000b6  e013              B        |L4.224|
                  |L4.184|
;;;90     		}	
;;;91     		case BT_DRIVER_RX_COMPLETE: {
;;;92     			if (rx_struct->ind == BT_UART_ACL) {
0000b8  480d              LDR      r0,|L4.240|
0000ba  6800              LDR      r0,[r0,#0]  ; rx_struct
0000bc  7800              LDRB     r0,[r0,#0]
0000be  2802              CMP      r0,#2
0000c0  d000              BEQ      |L4.196|
;;;93     				//packet = BT_ALLOCATE_HCI_PACKET_WITH_NODE(BT_MEMORY_RX, );
;;;94     			} else if (rx_struct->ind == BT_UART_EVT) {
0000c2  bf00              NOP      
                  |L4.196|
;;;95     			
;;;96     			}
;;;97     			bt_memset(buffer, 0, sizeof(buffer));
0000c4  2209              MOVS     r2,#9
0000c6  2100              MOVS     r1,#0
0000c8  4807              LDR      r0,|L4.232|
0000ca  f7fffffe          BL       bt_memset
;;;98     			rx_state = BT_DRIVER_WAIT_4_INDICATOR;
0000ce  2000              MOVS     r0,#0
0000d0  4906              LDR      r1,|L4.236|
0000d2  7008              STRB     r0,[r1,#0]
;;;99     			buffer_index = 0;
0000d4  4903              LDR      r1,|L4.228|
0000d6  8008              STRH     r0,[r1,#0]
;;;100    			payload_index = 0;
0000d8  4906              LDR      r1,|L4.244|
0000da  8008              STRH     r0,[r1,#0]
;;;101    			break;
0000dc  e000              B        |L4.224|
                  |L4.222|
;;;102    		}
;;;103    		default : {
;;;104    			break;
0000de  bf00              NOP      
                  |L4.224|
0000e0  bf00              NOP                            ;72
;;;105    		}
;;;106    	}
;;;107    }
0000e2  bd70              POP      {r4-r6,pc}
;;;108    
                          ENDP

                  |L4.228|
                          DCD      buffer_index
                  |L4.232|
                          DCD      buffer
                  |L4.236|
                          DCD      rx_state
                  |L4.240|
                          DCD      rx_struct
                  |L4.244|
                          DCD      payload_index

                          AREA ||i.bt_driver_send_data_to_controller||, CODE, READONLY, ALIGN=1

                  bt_driver_send_data_to_controller PROC
;;;108    
;;;109    void bt_driver_send_data_to_controller(uint8_t *buf, uint16_t buf_size)
000000  b570              PUSH     {r4-r6,lr}
;;;110    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;111    	comSendBuf(COM2, buf, buf_size);
000006  462a              MOV      r2,r5
000008  4621              MOV      r1,r4
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       comSendBuf
;;;112    }
000010  bd70              POP      {r4-r6,pc}
;;;113    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buffer
                          %        9

                          AREA ||.data||, DATA, ALIGN=2

                  bt_driver_is_inited
000000  00                DCB      0x00
                  rx_state
000001  00                DCB      0x00
                  buffer_index
000002  0000              DCW      0x0000
                  rx_struct
                          DCD      buffer
                  payload_index
000008  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\Middleware\\blue_angel\\driver\\bt_driver.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_bt_driver_c_d952c8a0____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_bt_driver_c_d952c8a0____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_bt_driver_c_d952c8a0____REVSH|
#line 128
|__asm___11_bt_driver_c_d952c8a0____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
