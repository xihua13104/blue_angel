; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bt_test.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bt_test.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\bt_test.crf ..\..\Middleware\blue_angel\platform\test\bt_test.c]
                          THUMB

                          AREA ||i.bt_linknode_test||, CODE, READONLY, ALIGN=2

                  bt_linknode_test PROC
;;;17     
;;;18     void bt_linknode_test(void) 
000000  b530              PUSH     {r4,r5,lr}
;;;19     { 
000002  b08f              SUB      sp,sp,#0x3c
;;;20     	bt_linknode_t head;
;;;21     	uint32_t timer_id = 0xFFFF;
000004  f64f70ff          MOV      r0,#0xffff
000008  900d              STR      r0,[sp,#0x34]
;;;22     	bt_timer_t timer = {
00000a  2214              MOVS     r2,#0x14
00000c  4968              LDR      r1,|L1.432|
00000e  a808              ADD      r0,sp,#0x20
000010  f7fffffe          BL       __aeabi_memcpy4
;;;23     		NULL,
;;;24     		0xFFFF,
;;;25     		0x1234,
;;;26     		0x100,
;;;27     		NULL
;;;28     		};
;;;29     	bt_timer_t timer1 = {
000014  2214              MOVS     r2,#0x14
000016  4966              LDR      r1,|L1.432|
000018  3114              ADDS     r1,r1,#0x14
00001a  a803              ADD      r0,sp,#0xc
00001c  f7fffffe          BL       __aeabi_memcpy4
;;;30     		NULL,
;;;31     		0xFFFE,
;;;32     		0x1233,
;;;33     		0x101,
;;;34     		NULL
;;;35     		};
;;;36     	bt_linknode_t *tmp_node = NULL;
000020  2500              MOVS     r5,#0
;;;37     	bt_timer_t *tmp_timer = NULL;
000022  2400              MOVS     r4,#0
;;;38     	bt_linknode_insert_node(&head, (bt_linknode_t *)&timer, BT_NODE_FRONT);
000024  2201              MOVS     r2,#1
000026  a908              ADD      r1,sp,#0x20
000028  a80e              ADD      r0,sp,#0x38
00002a  f7fffffe          BL       bt_linknode_insert_node
;;;39     	bt_linknode_insert_node(&head, (bt_linknode_t *)&timer1, BT_NODE_FRONT);	
00002e  2201              MOVS     r2,#1
000030  a903              ADD      r1,sp,#0xc
000032  a80e              ADD      r0,sp,#0x38
000034  f7fffffe          BL       bt_linknode_insert_node
;;;40     	/*tmp_node = bt_linknode_delete_node(&head, BT_NODE_FRONT);
;;;41     	CU_ASSERT(tmp_node == (bt_linknode_t *)&timer); 
;;;42     	tmp_timer = (bt_timer_t *)(tmp_node);
;;;43     	CU_ASSERT(tmp_timer->next == NULL);
;;;44     	CU_ASSERT(tmp_timer->timer_id == 0xFFFF);
;;;45     	CU_ASSERT(tmp_timer->data == 0x1234);
;;;46     	CU_ASSERT(tmp_timer->time_ms == 0x100);
;;;47     	CU_ASSERT(tmp_timer->timeout_cb == NULL);
;;;48     	CU_ASSERT(head.next == NULL);*/
;;;49     	tmp_node = bt_linknode_travel_node(&head, bt_timer_cmp_by_timerid, &timer_id);
000038  aa0d              ADD      r2,sp,#0x34
00003a  495e              LDR      r1,|L1.436|
00003c  a80e              ADD      r0,sp,#0x38
00003e  f7fffffe          BL       bt_linknode_travel_node
000042  4605              MOV      r5,r0
;;;50     	tmp_timer = (bt_timer_t *)(tmp_node->next);
000044  682c              LDR      r4,[r5,#0]
;;;51     	CU_ASSERT(tmp_timer == &timer);
000046  2000              MOVS     r0,#0
000048  a15b              ADR      r1,|L1.440|
00004a  e9cd1000          STRD     r1,r0,[sp,#0]
00004e  a908              ADD      r1,sp,#0x20
000050  428c              CMP      r4,r1
000052  d101              BNE      |L1.88|
000054  2101              MOVS     r1,#1
000056  e000              B        |L1.90|
                  |L1.88|
000058  2100              MOVS     r1,#0
                  |L1.90|
00005a  4608              MOV      r0,r1
00005c  a357              ADR      r3,|L1.444|
00005e  a264              ADR      r2,|L1.496|
000060  2133              MOVS     r1,#0x33
000062  f7fffffe          BL       CU_assertImplementation
;;;52     	CU_ASSERT(tmp_timer->timer_id == 0xFFFF);
000066  2000              MOVS     r0,#0
000068  a153              ADR      r1,|L1.440|
00006a  e9cd1000          STRD     r1,r0,[sp,#0]
00006e  f64f72ff          MOV      r2,#0xffff
000072  6861              LDR      r1,[r4,#4]
000074  4291              CMP      r1,r2
000076  d101              BNE      |L1.124|
000078  2101              MOVS     r1,#1
00007a  e000              B        |L1.126|
                  |L1.124|
00007c  2100              MOVS     r1,#0
                  |L1.126|
00007e  4608              MOV      r0,r1
000080  a34e              ADR      r3,|L1.444|
000082  a260              ADR      r2,|L1.516|
000084  2134              MOVS     r1,#0x34
000086  f7fffffe          BL       CU_assertImplementation
;;;53     	CU_ASSERT(tmp_timer->data == 0x1234);
00008a  2000              MOVS     r0,#0
00008c  a14a              ADR      r1,|L1.440|
00008e  e9cd1000          STRD     r1,r0,[sp,#0]
000092  f2412234          MOV      r2,#0x1234
000096  68a1              LDR      r1,[r4,#8]
000098  4291              CMP      r1,r2
00009a  d101              BNE      |L1.160|
00009c  2101              MOVS     r1,#1
00009e  e000              B        |L1.162|
                  |L1.160|
0000a0  2100              MOVS     r1,#0
                  |L1.162|
0000a2  4608              MOV      r0,r1
0000a4  a345              ADR      r3,|L1.444|
0000a6  a25f              ADR      r2,|L1.548|
0000a8  2135              MOVS     r1,#0x35
0000aa  f7fffffe          BL       CU_assertImplementation
;;;54     	CU_ASSERT(tmp_timer->time_ms == 0x100);
0000ae  2000              MOVS     r0,#0
0000b0  a141              ADR      r1,|L1.440|
0000b2  e9cd1000          STRD     r1,r0,[sp,#0]
0000b6  68e1              LDR      r1,[r4,#0xc]
0000b8  f5b17f80          CMP      r1,#0x100
0000bc  d101              BNE      |L1.194|
0000be  2101              MOVS     r1,#1
0000c0  e000              B        |L1.196|
                  |L1.194|
0000c2  2100              MOVS     r1,#0
                  |L1.196|
0000c4  4608              MOV      r0,r1
0000c6  a33d              ADR      r3,|L1.444|
0000c8  a25d              ADR      r2,|L1.576|
0000ca  2136              MOVS     r1,#0x36
0000cc  f7fffffe          BL       CU_assertImplementation
;;;55     	CU_ASSERT(tmp_timer->timeout_cb == NULL);
0000d0  2000              MOVS     r0,#0
0000d2  a139              ADR      r1,|L1.440|
0000d4  e9cd1000          STRD     r1,r0,[sp,#0]
0000d8  6921              LDR      r1,[r4,#0x10]
0000da  b909              CBNZ     r1,|L1.224|
0000dc  2101              MOVS     r1,#1
0000de  e000              B        |L1.226|
                  |L1.224|
0000e0  2100              MOVS     r1,#0
                  |L1.226|
0000e2  4608              MOV      r0,r1
0000e4  a335              ADR      r3,|L1.444|
0000e6  a25d              ADR      r2,|L1.604|
0000e8  2137              MOVS     r1,#0x37
0000ea  f7fffffe          BL       CU_assertImplementation
;;;56     
;;;57     	timer_id = 0xFFFE;
0000ee  f64f70fe          MOV      r0,#0xfffe
0000f2  900d              STR      r0,[sp,#0x34]
;;;58     	tmp_node = bt_linknode_travel_node(&head, bt_timer_cmp_by_timerid, &timer_id);
0000f4  aa0d              ADD      r2,sp,#0x34
0000f6  492f              LDR      r1,|L1.436|
0000f8  a80e              ADD      r0,sp,#0x38
0000fa  f7fffffe          BL       bt_linknode_travel_node
0000fe  4605              MOV      r5,r0
;;;59     	tmp_timer = (bt_timer_t *)(tmp_node->next);
000100  682c              LDR      r4,[r5,#0]
;;;60     	CU_ASSERT(tmp_timer == &timer1);
000102  2000              MOVS     r0,#0
000104  a12c              ADR      r1,|L1.440|
000106  e9cd1000          STRD     r1,r0,[sp,#0]
00010a  a903              ADD      r1,sp,#0xc
00010c  428c              CMP      r4,r1
00010e  d101              BNE      |L1.276|
000110  2101              MOVS     r1,#1
000112  e000              B        |L1.278|
                  |L1.276|
000114  2100              MOVS     r1,#0
                  |L1.278|
000116  4608              MOV      r0,r1
000118  a328              ADR      r3,|L1.444|
00011a  a258              ADR      r2,|L1.636|
00011c  213c              MOVS     r1,#0x3c
00011e  f7fffffe          BL       CU_assertImplementation
;;;61     	CU_ASSERT(tmp_timer->timer_id == 0xFFFE);
000122  2000              MOVS     r0,#0
000124  a124              ADR      r1,|L1.440|
000126  e9cd1000          STRD     r1,r0,[sp,#0]
00012a  f64f72fe          MOV      r2,#0xfffe
00012e  6861              LDR      r1,[r4,#4]
000130  4291              CMP      r1,r2
000132  d101              BNE      |L1.312|
000134  2101              MOVS     r1,#1
000136  e000              B        |L1.314|
                  |L1.312|
000138  2100              MOVS     r1,#0
                  |L1.314|
00013a  4608              MOV      r0,r1
00013c  a31f              ADR      r3,|L1.444|
00013e  a255              ADR      r2,|L1.660|
000140  213d              MOVS     r1,#0x3d
000142  f7fffffe          BL       CU_assertImplementation
;;;62     	CU_ASSERT(tmp_timer->data == 0x1233);
000146  2000              MOVS     r0,#0
000148  a11b              ADR      r1,|L1.440|
00014a  e9cd1000          STRD     r1,r0,[sp,#0]
00014e  f2412233          MOV      r2,#0x1233
000152  68a1              LDR      r1,[r4,#8]
000154  4291              CMP      r1,r2
000156  d101              BNE      |L1.348|
000158  2101              MOVS     r1,#1
00015a  e000              B        |L1.350|
                  |L1.348|
00015c  2100              MOVS     r1,#0
                  |L1.350|
00015e  4608              MOV      r0,r1
000160  a316              ADR      r3,|L1.444|
000162  a254              ADR      r2,|L1.692|
000164  213e              MOVS     r1,#0x3e
000166  f7fffffe          BL       CU_assertImplementation
;;;63     	CU_ASSERT(tmp_timer->time_ms == 0x101);
00016a  2000              MOVS     r0,#0
00016c  a112              ADR      r1,|L1.440|
00016e  e9cd1000          STRD     r1,r0,[sp,#0]
000172  f2401201          MOV      r2,#0x101
000176  68e1              LDR      r1,[r4,#0xc]
000178  4291              CMP      r1,r2
00017a  d101              BNE      |L1.384|
00017c  2101              MOVS     r1,#1
00017e  e000              B        |L1.386|
                  |L1.384|
000180  2100              MOVS     r1,#0
                  |L1.386|
000182  4608              MOV      r0,r1
000184  a30d              ADR      r3,|L1.444|
000186  a252              ADR      r2,|L1.720|
000188  213f              MOVS     r1,#0x3f
00018a  f7fffffe          BL       CU_assertImplementation
;;;64     	CU_ASSERT(tmp_timer->timeout_cb == NULL);
00018e  2000              MOVS     r0,#0
000190  a109              ADR      r1,|L1.440|
000192  e9cd1000          STRD     r1,r0,[sp,#0]
000196  6921              LDR      r1,[r4,#0x10]
000198  b909              CBNZ     r1,|L1.414|
00019a  2101              MOVS     r1,#1
00019c  e000              B        |L1.416|
                  |L1.414|
00019e  2100              MOVS     r1,#0
                  |L1.416|
0001a0  4608              MOV      r0,r1
0001a2  a306              ADR      r3,|L1.444|
0001a4  a22d              ADR      r2,|L1.604|
0001a6  2140              MOVS     r1,#0x40
0001a8  f7fffffe          BL       CU_assertImplementation
;;;65     }
0001ac  b00f              ADD      sp,sp,#0x3c
0001ae  bd30              POP      {r4,r5,pc}
;;;66     
                          ENDP

                  |L1.432|
                          DCD      ||.constdata||
                  |L1.436|
                          DCD      bt_timer_cmp_by_timerid
                  |L1.440|
0001b8  00                DCB      0
0001b9  00                DCB      0
0001ba  00                DCB      0
0001bb  00                DCB      0
                  |L1.444|
0001bc  2e2e5c2e          DCB      "..\\..\\Middleware\\blue_angel\\platform\\test\\bt_test"
0001c0  2e5c4d69
0001c4  64646c65
0001c8  77617265
0001cc  5c626c75
0001d0  655f616e
0001d4  67656c5c
0001d8  706c6174
0001dc  666f726d
0001e0  5c746573
0001e4  745c6274
0001e8  5f746573
0001ec  74      
0001ed  2e6300            DCB      ".c",0
                  |L1.496|
0001f0  746d705f          DCB      "tmp_timer == &timer",0
0001f4  74696d65
0001f8  72203d3d
0001fc  20267469
000200  6d657200
                  |L1.516|
000204  746d705f          DCB      "tmp_timer->timer_id == 0xFFFF",0
000208  74696d65
00020c  722d3e74
000210  696d6572
000214  5f696420
000218  3d3d2030
00021c  78464646
000220  4600    
000222  00                DCB      0
000223  00                DCB      0
                  |L1.548|
000224  746d705f          DCB      "tmp_timer->data == 0x1234",0
000228  74696d65
00022c  722d3e64
000230  61746120
000234  3d3d2030
000238  78313233
00023c  3400    
00023e  00                DCB      0
00023f  00                DCB      0
                  |L1.576|
000240  746d705f          DCB      "tmp_timer->time_ms == 0x100",0
000244  74696d65
000248  722d3e74
00024c  696d655f
000250  6d73203d
000254  3d203078
000258  31303000
                  |L1.604|
00025c  746d705f          DCB      "tmp_timer->timeout_cb == NULL",0
000260  74696d65
000264  722d3e74
000268  696d656f
00026c  75745f63
000270  62203d3d
000274  204e554c
000278  4c00    
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
00027c  746d705f          DCB      "tmp_timer == &timer1",0
000280  74696d65
000284  72203d3d
000288  20267469
00028c  6d657231
000290  00      
000291  00                DCB      0
000292  00                DCB      0
000293  00                DCB      0
                  |L1.660|
000294  746d705f          DCB      "tmp_timer->timer_id == 0xFFFE",0
000298  74696d65
00029c  722d3e74
0002a0  696d6572
0002a4  5f696420
0002a8  3d3d2030
0002ac  78464646
0002b0  4500    
0002b2  00                DCB      0
0002b3  00                DCB      0
                  |L1.692|
0002b4  746d705f          DCB      "tmp_timer->data == 0x1233",0
0002b8  74696d65
0002bc  722d3e64
0002c0  61746120
0002c4  3d3d2030
0002c8  78313233
0002cc  3300    
0002ce  00                DCB      0
0002cf  00                DCB      0
                  |L1.720|
0002d0  746d705f          DCB      "tmp_timer->time_ms == 0x101",0
0002d4  74696d65
0002d8  722d3e74
0002dc  696d655f
0002e0  6d73203d
0002e4  3d203078
0002e8  31303100

                          AREA ||i.bt_memory_test||, CODE, READONLY, ALIGN=2

                  bt_memory_test PROC
;;;66     
;;;67     void bt_memory_test(void) 
000000  b51c              PUSH     {r2-r4,lr}
;;;68     { 
;;;69     	bt_timer_t *timer;
;;;70     	bt_fixed_memory_init(BT_FIXED_MM_TIMER, bt_timer_fixed_memory, sizeof(bt_timer_fixed_memory));
000002  228c              MOVS     r2,#0x8c
000004  493a              LDR      r1,|L2.240|
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       bt_fixed_memory_init
;;;71     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       bt_fixed_memory_allocate
000012  4604              MOV      r4,r0
;;;72     	CU_ASSERT(timer != NULL);
000014  2000              MOVS     r0,#0
000016  a137              ADR      r1,|L2.244|
000018  e9cd1000          STRD     r1,r0,[sp,#0]
00001c  b10c              CBZ      r4,|L2.34|
00001e  2101              MOVS     r1,#1
000020  e000              B        |L2.36|
                  |L2.34|
000022  2100              MOVS     r1,#0
                  |L2.36|
000024  4608              MOV      r0,r1
000026  a334              ADR      r3,|L2.248|
000028  a240              ADR      r2,|L2.300|
00002a  2148              MOVS     r1,#0x48
00002c  f7fffffe          BL       CU_assertImplementation
;;;73     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       bt_fixed_memory_allocate
000036  4604              MOV      r4,r0
;;;74     	CU_ASSERT(timer != NULL);
000038  2000              MOVS     r0,#0
00003a  a12e              ADR      r1,|L2.244|
00003c  e9cd1000          STRD     r1,r0,[sp,#0]
000040  b10c              CBZ      r4,|L2.70|
000042  2101              MOVS     r1,#1
000044  e000              B        |L2.72|
                  |L2.70|
000046  2100              MOVS     r1,#0
                  |L2.72|
000048  4608              MOV      r0,r1
00004a  a32b              ADR      r3,|L2.248|
00004c  a237              ADR      r2,|L2.300|
00004e  214a              MOVS     r1,#0x4a
000050  f7fffffe          BL       CU_assertImplementation
;;;75     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       bt_fixed_memory_allocate
00005a  4604              MOV      r4,r0
;;;76     	CU_ASSERT(timer != NULL);
00005c  2000              MOVS     r0,#0
00005e  a125              ADR      r1,|L2.244|
000060  e9cd1000          STRD     r1,r0,[sp,#0]
000064  b10c              CBZ      r4,|L2.106|
000066  2101              MOVS     r1,#1
000068  e000              B        |L2.108|
                  |L2.106|
00006a  2100              MOVS     r1,#0
                  |L2.108|
00006c  4608              MOV      r0,r1
00006e  a322              ADR      r3,|L2.248|
000070  a22e              ADR      r2,|L2.300|
000072  214c              MOVS     r1,#0x4c
000074  f7fffffe          BL       CU_assertImplementation
;;;77     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
000078  2000              MOVS     r0,#0
00007a  f7fffffe          BL       bt_fixed_memory_allocate
00007e  4604              MOV      r4,r0
;;;78     	CU_ASSERT(timer != NULL);
000080  2000              MOVS     r0,#0
000082  a11c              ADR      r1,|L2.244|
000084  e9cd1000          STRD     r1,r0,[sp,#0]
000088  b10c              CBZ      r4,|L2.142|
00008a  2101              MOVS     r1,#1
00008c  e000              B        |L2.144|
                  |L2.142|
00008e  2100              MOVS     r1,#0
                  |L2.144|
000090  4608              MOV      r0,r1
000092  a319              ADR      r3,|L2.248|
000094  a225              ADR      r2,|L2.300|
000096  214e              MOVS     r1,#0x4e
000098  f7fffffe          BL       CU_assertImplementation
;;;79     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
00009c  2000              MOVS     r0,#0
00009e  f7fffffe          BL       bt_fixed_memory_allocate
0000a2  4604              MOV      r4,r0
;;;80     	CU_ASSERT(timer != NULL);
0000a4  2000              MOVS     r0,#0
0000a6  a113              ADR      r1,|L2.244|
0000a8  e9cd1000          STRD     r1,r0,[sp,#0]
0000ac  b10c              CBZ      r4,|L2.178|
0000ae  2101              MOVS     r1,#1
0000b0  e000              B        |L2.180|
                  |L2.178|
0000b2  2100              MOVS     r1,#0
                  |L2.180|
0000b4  4608              MOV      r0,r1
0000b6  a310              ADR      r3,|L2.248|
0000b8  a21c              ADR      r2,|L2.300|
0000ba  2150              MOVS     r1,#0x50
0000bc  f7fffffe          BL       CU_assertImplementation
;;;81     	timer = (bt_timer_t *)bt_fixed_memory_allocate(BT_FIXED_MM_TIMER); 
0000c0  2000              MOVS     r0,#0
0000c2  f7fffffe          BL       bt_fixed_memory_allocate
0000c6  4604              MOV      r4,r0
;;;82     	CU_ASSERT(timer != NULL);
0000c8  2000              MOVS     r0,#0
0000ca  a10a              ADR      r1,|L2.244|
0000cc  e9cd1000          STRD     r1,r0,[sp,#0]
0000d0  b10c              CBZ      r4,|L2.214|
0000d2  2101              MOVS     r1,#1
0000d4  e000              B        |L2.216|
                  |L2.214|
0000d6  2100              MOVS     r1,#0
                  |L2.216|
0000d8  4608              MOV      r0,r1
0000da  a307              ADR      r3,|L2.248|
0000dc  a213              ADR      r2,|L2.300|
0000de  2152              MOVS     r1,#0x52
0000e0  f7fffffe          BL       CU_assertImplementation
;;;83     	bt_fixed_memory_free(BT_FIXED_MM_TIMER, (uint8_t *)timer);
0000e4  4621              MOV      r1,r4
0000e6  2000              MOVS     r0,#0
0000e8  f7fffffe          BL       bt_fixed_memory_free
;;;84     	//bt_fixed_memory_free(BT_FIXED_MM_TIMER, (uint8_t *)timer);
;;;85     }
0000ec  bd1c              POP      {r2-r4,pc}
;;;86     
                          ENDP

0000ee  0000              DCW      0x0000
                  |L2.240|
                          DCD      bt_timer_fixed_memory
                  |L2.244|
0000f4  00                DCB      0
0000f5  00                DCB      0
0000f6  00                DCB      0
0000f7  00                DCB      0
                  |L2.248|
0000f8  2e2e5c2e          DCB      "..\\..\\Middleware\\blue_angel\\platform\\test\\bt_test"
0000fc  2e5c4d69
000100  64646c65
000104  77617265
000108  5c626c75
00010c  655f616e
000110  67656c5c
000114  706c6174
000118  666f726d
00011c  5c746573
000120  745c6274
000124  5f746573
000128  74      
000129  2e6300            DCB      ".c",0
                  |L2.300|
00012c  74696d65          DCB      "timer != NULL",0
000130  7220213d
000134  204e554c
000138  4c00    
00013a  00                DCB      0
00013b  00                DCB      0

                          AREA ||i.bt_timer_test||, CODE, READONLY, ALIGN=2

                  bt_timer_test PROC
;;;86     
;;;87     void bt_timer_test(void) 
000000  b51c              PUSH     {r2-r4,lr}
;;;88     { 
;;;89     	CU_ASSERT_STRING_EQUAL_FATAL("abc", "123"); 
000002  a10a              ADR      r1,|L3.44|
000004  a00a              ADR      r0,|L3.48|
000006  f7fffffe          BL       strcmp
00000a  b908              CBNZ     r0,|L3.16|
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L3.18|
                  |L3.16|
000010  2000              MOVS     r0,#0
                  |L3.18|
000012  4604              MOV      r4,r0
000014  2001              MOVS     r0,#1
000016  a107              ADR      r1,|L3.52|
000018  a307              ADR      r3,|L3.56|
00001a  a214              ADR      r2,|L3.108|
00001c  e9cd1000          STRD     r1,r0,[sp,#0]
000020  2159              MOVS     r1,#0x59
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       CU_assertImplementation
;;;90     }
000028  bd1c              POP      {r2-r4,pc}
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
00002c  31323300          DCB      "123",0
                  |L3.48|
000030  61626300          DCB      "abc",0
                  |L3.52|
000034  00                DCB      0
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0
                  |L3.56|
000038  2e2e5c2e          DCB      "..\\..\\Middleware\\blue_angel\\platform\\test\\bt_test"
00003c  2e5c4d69
000040  64646c65
000044  77617265
000048  5c626c75
00004c  655f616e
000050  67656c5c
000054  706c6174
000058  666f726d
00005c  5c746573
000060  745c6274
000064  5f746573
000068  74      
000069  2e6300            DCB      ".c",0
                  |L3.108|
00006c  43555f41          DCB      "CU_ASSERT_STRING_EQUAL_FATAL(""abc"",""123"")",0
000070  53534552
000074  545f5354
000078  52494e47
00007c  5f455155
000080  414c5f46
000084  4154414c
000088  28226162
00008c  63222c22
000090  31323322
000094  2900    
000096  00                DCB      0
000097  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  bt_timer_fixed_memory
                          %        140

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00000000
                          DCD      0x0000ffff
                          DCD      0x00001234
                          DCD      0x00000100
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x0000fffe
                          DCD      0x00001233
                          DCD      0x00000101
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Middleware\\blue_angel\\platform\\test\\bt_test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bt_test_c_2bc6ae8e____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bt_test_c_2bc6ae8e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bt_test_c_2bc6ae8e____REVSH|
#line 128
|__asm___9_bt_test_c_2bc6ae8e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
